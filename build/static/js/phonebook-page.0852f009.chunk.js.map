{"version":3,"sources":["components/Form/Form.module.css","components/Filter/Filter.module.css","components/Contact/Contact.module.css","components/ContactsList/ContactsList.module.css","pages/Phonebook/Phonebook.module.css","redux/Phonebook/phonebook-selectors.js","components/Form/Form.js","components/Filter/Filter.js","components/Contact/Contact.js","components/ContactsList/ContactsList.js","pages/Phonebook/Phonebook.js"],"names":["module","exports","getContacts","state","contacts","getFilter","filter","getFilteredContacts","createSelector","name","toLowerCase","includes","Form","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","handleInputChange","e","target","value","reset","className","s","form","onSubmit","preventDefault","some","element","alert","addContact","toast","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","label","onChange","input","type","pattern","title","required","button","btnText","Filter","text","changeFilter","currentTarget","Contact","propType","PropTypes","string","isRequired","ContactsList","useEffect","fetchContacts","length","map","id","item","onClick","deleteContact","handleDeleteContact","Phonebook","contactTitle"],"mappings":"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","file":"static/js/phonebook-page.0852f009.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3DV7u\",\"label\":\"Form_label__32End\",\"input\":\"Form_input__15fWI\",\"button\":\"Form_button__5bcY3\",\"btnText\":\"Form_btnText__3eC4X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Filter_text__1hULH\",\"value\":\"Filter_value__1OLhv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Contact_name__pg3E0\",\"number\":\"Contact_number__1vgxi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactsList_item__3idEH\",\"button\":\"ContactsList_button__3V7Di\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Phonebook_title__HYIUD\",\"contactTitle\":\"Phonebook_contactTitle__1yCdm\"};","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = state => state.contacts.contacts;\r\nexport const getFilter = state => state.filter;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) =>\r\n    contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(filter.toLowerCase()),\r\n    ),\r\n);\r\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { getContacts } from '../../redux/Phonebook/phonebook-selectors';\nimport { addContact } from '../../redux/Phonebook/phonebook-operations';\nimport s from './Form.module.css';\n\nexport default function Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const comparableElement = contacts.some(\n      element => element.name.toLowerCase() === name.toLowerCase(),\n    );\n    if (comparableElement) {\n      reset();\n      return alert(`${name} is already in the directory`);\n    }\n\n    dispatch(addContact({ name, number }));\n    toast.info('Contact added to the phonebook!', {\n      position: 'top-center',\n      autoClose: 4000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          onChange={handleInputChange}\n          value={name}\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className={s.label}>\n        Phone number\n        <input\n          value={number}\n          className={s.input}\n          onChange={handleInputChange}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button className={s.button} type=\"submit\">\n        <span className={s.btnText}> Add contact</span>\n      </button>\n    </form>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/Phonebook/phonebook-selectors';\nimport { changeFilter } from '../../redux/Phonebook/phonebook-actions';\nimport s from './Filter.module.css';\n\nexport default function Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const onChangeInput = e => {\n    dispatch(changeFilter(e.currentTarget.value));\n  };\n  return (\n    <label className={s.text}>\n      Find contacts by name\n      <input\n        className={s.value}\n        type=\"text\"\n        value={filter}\n        onChange={onChangeInput}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport s from './Contact.module.css';\nexport default function Contact({ name, number }) {\n  return (\n    <>\n      <span className={s.name}>{name}:</span>\n      <span className={s.number}>{number}</span>\n    </>\n  );\n}\nContact.propType = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n};\n","import Contact from '../Contact';\nimport { useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilteredContacts } from '../../redux/Phonebook/phonebook-selectors';\nimport {\n  fetchContacts,\n  deleteContact,\n} from '../../redux/Phonebook/phonebook-operations';\nimport s from './ContactsList.module.css';\n\nexport default function ContactsList() {\n  const contacts = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleDeleteContact = id => {\n    dispatch(deleteContact(id));\n    toast.info('Contact deleted!', {\n      position: 'top-center',\n      autoClose: 4000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  };\n\n  return (\n    <ul>\n      {contacts.length > 0 &&\n        contacts.map(({ name, number, id }) => (\n          <li className={s.item} key={id}>\n            <Contact name={name} number={number} />\n\n            <button\n              className={s.button}\n              type=\"button\"\n              onClick={() => handleDeleteContact(id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n    </ul>\n  );\n}\n","import Form from '../../components/Form';\r\nimport Filter from '../../components/Filter';\r\nimport ContactList from '../../components/ContactsList';\r\nimport s from './Phonebook.module.css';\r\n\r\nexport default function Phonebook() {\r\n  return (\r\n    <>\r\n      <h2 className={s.title}>Phonebook</h2>\r\n      <Form />\r\n      <Filter />\r\n      <h3 className={s.contactTitle}>Contacts</h3>\r\n      <ContactList />\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}